server:
  name: server
  persistentVolume:
    enabled: true
    storageClass: "ebs-sc"
    accessModes:
      - ReadWriteOnce
    size: 8Gi
  service:
    type: NodePort

serviceMonitor:
  enabled: true

# serverFiles:
#   prometheus.yml:
#     scrape_configs:
#       - job_name: prometheus
#         static_configs:
#           - targets:
#               - localhost:9090
#       - job_name: "istiod"
#         kubernetes_sd_configs:
#           - role: endpoints
#             namespaces:
#               names:
#                 - istio-system
#         relabel_configs:
#           - source_labels:
#               [
#                 __meta_kubernetes_service_name,
#                 __meta_kubernetes_endpoint_port_name,
#               ]
#             action: keep
#             regex: istiod;http-monitoring

#       - job_name: "istio-mesh"
#         kubernetes_sd_configs:
#           - role: endpoints
#             namespaces:
#               names:
#                 - istio-system
#         relabel_configs:
#           - source_labels:
#               [
#                 __meta_kubernetes_service_name,
#                 __meta_kubernetes_endpoint_port_name,
#               ]
#             action: keep
#             regex: istio-telemetry;prometheus

#       - job_name: "envoy-stats"
#         metrics_path: /stats/prometheus
#         kubernetes_sd_configs:
#           - role: pod
#         # relabel_config 설정 https://grafana.com/docs/grafana-cloud/metrics-control-usage/control-prometheus-metrics-usage/usage-reduction/?src=grafana&mdm=rss
#         relabel_configs:
#           - source_labels: [__meta_kubernetes_pod_container_port_name]
#             action: keep # 일치하는 대상 유지, 나머지 삭제
#             regex: ".*-envoy-prom"
#           - source_labels:
#               [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
#             action: replace # 일치하는 label 을 replacement에 지정된 새 label 로 변경
#             regex: ([^:]+)(?::\d+)?;(\d+)
#             replacement: $1:15090
#             target_label: __address__
#           - action: labeldrop
#             regex: __meta_kubernetes_pod_label_(.+)
#           - source_labels: [__meta_kubernetes_namespace]
#             action: replace
#             target_label: namespace
#           - source_labels: [__meta_kubernetes_pod_name]
#             action: replace
#             target_label: pod_name

#       - job_name: "istio-policy"
#         kubernetes_sd_configs:
#           - role: endpoints
#             namespaces:
#               names:
#                 - istio-system
#         relabel_configs:
#           - source_labels:
#               [
#                 __meta_kubernetes_service_name,
#                 __meta_kubernetes_endpoint_port_name,
#               ]
#             action: keep
#             regex: istio-policy;http-policy-monitoring

#       - job_name: "istio-telemetry"
#         kubernetes_sd_configs:
#           - role: endpoints
#             namespaces:
#               names:
#                 - istio-system
#         relabel_configs:
#           - source_labels:
#               [
#                 __meta_kubernetes_service_name,
#                 __meta_kubernetes_endpoint_port_name,
#               ]
#             action: keep
#             regex: istio-telemetry;http-monitoring

#       - job_name: "galley"
#         kubernetes_sd_configs:
#           - role: endpoints
#             namespaces:
#               names:
#                 - istio-system
#         relabel_configs:
#           - source_labels:
#               [
#                 __meta_kubernetes_service_name,
#                 __meta_kubernetes_endpoint_port_name,
#               ]
#             action: keep
#             regex: istio-galley;http-monitoring

#       - job_name: "citadel"
#         kubernetes_sd_configs:
#           - role: endpoints
#             namespaces:
#               names:
#                 - istio-system
#         relabel_configs:
#           - source_labels:
#               [
#                 __meta_kubernetes_service_name,
#                 __meta_kubernetes_endpoint_port_name,
#               ]
#             action: keep
#             regex: istio-citadel;http-monitoring

#       - job_name: "sidecar-injector"
#         kubernetes_sd_configs:
#           - role: endpoints
#             namespaces:
#               names:
#                 - default
#                 - istio-system
#                 - traefik
#         relabel_configs:
#           - source_labels:
#               [
#                 __meta_kubernetes_service_name,
#                 __meta_kubernetes_endpoint_port_name,
#               ]
#             action: keep
#             regex: istio-sidecar-injector;http-monitoring

#         # kubernetes API 스크랩
#       - job_name: "kubernetes-apiservers"
#         kubernetes_sd_configs:
#           - role: endpoints
#             namespaces:
#               names:
#                 - default
#         scheme: https
#         tls_config:
#           ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#         bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
#         relabel_configs:
#           - source_labels:
#               [
#                 __meta_kubernetes_service_name,
#                 __meta_kubernetes_endpoint_port_name,
#               ]
#             action: keep
#             regex: kubernetes;https

#         # kubelet 수집
#       - job_name: "kubernetes-nodes"
#         scheme: https
#         tls_config:
#           ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#         bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
#         kubernetes_sd_configs:
#           - role: node
#         relabel_configs:
#           - action: labelmap
#             regex: __meta_kubernetes_node_label_(.+)
#           - target_label: __address__
#             replacement: kubernetes.default.svc:443
#           - source_labels: [__meta_kubernetes_node_name]
#             regex: (.+)
#             target_label: __metrics_path__
#             replacement: /api/v1/nodes/${1}/proxy/metrics

#         # 컨테이너 수집
#       - job_name: "kubernetes-cadvisor"
#         scheme: https
#         tls_config:
#           ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#         bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
#         kubernetes_sd_configs:
#           - role: node
#         relabel_configs:
#           - action: labelmap
#             regex: __meta_kubernetes_node_label_(.+)
#           - target_label: __address__
#             replacement: kubernetes.default.svc:443
#           - source_labels: [__meta_kubernetes_node_name]
#             regex: (.+)
#             target_label: __metrics_path__
#             replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

#         # node 정보 수집
#       - job_name: "kube-dns"
#         static_configs:
#           - targets: ["kube-dns.kube-system.svc.cluster.local:9153"]

#         #  서비스 수집
#       - job_name: "kubernetes-service-endpoints"
#         kubernetes_sd_configs:
#           - role: endpoints
#         relabel_configs:
#           - source_labels:
#               [__meta_kubernetes_service_annotation_prometheus_io_scrape]
#             action: keep
#             regex: true
#           - source_labels:
#               [__meta_kubernetes_service_annotation_prometheus_io_scheme]
#             action: replace
#             target_label: __scheme__
#             regex: (https?)
#           - source_labels:
#               [__meta_kubernetes_service_annotation_prometheus_io_path]
#             action: replace
#             target_label: __metrics_path__
#             regex: (.+)
#           - source_labels:
#               [
#                 __address__,
#                 __meta_kubernetes_service_annotation_prometheus_io_port,
#               ]
#             action: replace
#             target_label: __address__
#             regex: ([^:]+)(?::\d+)?;(\d+)
#             replacement: $1:$2
#           - action: labelmap
#             regex: __meta_kubernetes_service_label_(.+)
#           - source_labels: [__meta_kubernetes_namespace]
#             action: replace
#             target_label: kubernetes_namespace
#           - source_labels: [__meta_kubernetes_service_name]
#             action: replace
#             target_label: kubernetes_name

alertmanager:
  enabled: false

kube-state-metrics:
  enabled: true

prometheus-node-exporter:
  enabled: true

prometheus-pushgateway:
  enabled: true
  service:
    type: NodePort
  ingress:
    enabled: false
    # annotations:
